{"version":3,"sources":["css/images/catpaw.png","components/Title.js","components/EditCatForm.js","components/CatEntry.js","components/EntryContainer.js","components/AddCatForm.js","sampleCats.js","base.js","components/BackgroundImage.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Title","props","title","EditCatForm","handleChange","event","updatedCourse","entry","currentTarget","name","value","editEntry","index","className","type","onChange","this","defaultValue","nameRef","IdRef","ageRef","sexRef","colorRef","commentRef","React","Component","Cat","dateRef","image","src","alt","trigger","onClick","position","key","entries","deleteEntry","EntryContainer","Fragment","loadSampleEntries","Object","keys","map","reverse","AddCatForm","createRef","createCat","close","preventDefault","current","parseInt","Date","toString","console","log","addEntry","reset","onSubmit","e","autoComplete","ref","placeholder","required","sampleCats","cat1","cat2","cat3","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","ImageDiv","styled","div","paw","BackgroundImage","App","state","now","setState","updatedEntry","syncState","context","removeBinding","formOpen","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c321f84.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/catpaw.7af9293d.png\";","import React from 'react';\n\nconst Title = (props) => (\n  <h1>{ props.title }</h1>\n);\n\nexport default Title;\n","import React from \"react\";\n\nclass EditCatForm extends React.Component {\n  handleChange = (event) => {\n    const updatedCourse = {\n      ...this.props.entry,\n      [event.currentTarget.name]: event.currentTarget.value,\n    };\n    this.props.editEntry(this.props.index, updatedCourse);\n  }\n\n  render() {\n    return (\n      <div className=\"cat-edit\">\n        <p>Click anywhere outside of the form done editing.</p>\n        <p>Name:\n          <input\n            type=\"text\"\n            name=\"nameRef\"\n            onChange={this.handleChange}\n            defaultValue={this.props.entry.nameRef} \n          />\n        </p>\n        <p> ID Number:\n          <input\n            type=\"text\"\n            name=\"IdRef\"\n            onChange={this.handleChange}\n            defaultValue={this.props.entry.IdRef} \n          />\n        </p>\n        <p>Age:\n          <input\n            type=\"text\"\n            name=\"ageRef\"\n            onChange={this.handleChange}\n            defaultValue={this.props.entry.ageRef} \n          />\n        </p>\n        <p>Sex:\n          <select\n            type=\"text\"\n            name=\"sexRef\"\n            onChange={this.handleChange}\n            defaultValue={this.props.entry.sexRef} \n          >\n            <option value=\"female\">Female</option>\n            <option value=\"male\">Male</option>\n          </select>\n        </p>\n        <p>Color:\n          <input\n            type=\"text\"\n            name=\"colorRef\"\n            onChange={this.handleChange}\n            defaultValue={this.props.entry.colorRef} \n          />\n        </p>\n        <p>Comment:\n          <input\n            type=\"text\"\n            name=\"commentRef\"\n            onChange={this.handleChange}\n            defaultValue={this.props.entry.commentRef} \n          />\n        </p>\n      </div>\n    )\n  }\n}\n\nexport default EditCatForm;\n","import React from \"react\";\nimport Popup from \"reactjs-popup\";\nimport EditCatForm from \"./EditCatForm.js\";\n\nclass Cat extends React.Component {\n\n\n\n  render() {\n    const { \n      nameRef,\n      IdRef,\n      ageRef,\n      sexRef,\n      colorRef,\n      commentRef,\n      dateRef,\n      image,\n     } = this.props.entry;\n     \n    return (\n      <li className=\"cat-entry\">\n        <img src={image} alt={nameRef} className=\"cat-image\"/>\n        <p><span className=\"field-label\">Date Entered:</span> {dateRef}</p>\n        <p><span className=\"field-label\">Cat Name:</span> {nameRef}</p>\n        <p><span className=\"field-label\">Cat ID Number:</span> {IdRef}</p>\n        <p><span className=\"field-label\">Age:</span> {ageRef}</p>\n        <p><span className=\"field-label\">Sex:</span> {sexRef}</p>\n        <p><span className=\"field-label\">Coat Color:</span> {colorRef}</p>\n        <p><span className=\"field-label\">Comment:</span> {commentRef}</p>\n        <Popup\n          trigger={<button onClick={() => this.props.editEntry(this.props.index)}>Edit</button>}\n          position=\"right top\">\n          <EditCatForm \n            key={this.props.key}\n            index={this.props.index}\n            entry={this.props.entry}\n            entries={this.props.entries}\n            editEntry={this.props.editEntry}\n          />\n        </Popup>\n        <button onClick={() => this.props.deleteEntry(this.props.index)}>Delete</button>\n      </li>\n    )\n  }\n}\n\nexport default Cat;\n","\nimport React from \"react\";\nimport Cat from './CatEntry.js';\n\nclass EntryContainer extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <h3>{this.props.title}</h3>\n        <button onClick={this.props.loadSampleEntries}>Load Sample Cats</button>\n        <ul className=\"entry-list\">\n          {Object.keys(this.props.entries).map(key => (\n            <Cat\n              key={key}\n              index={key}\n              entry={this.props.entries[key]}\n              entries={this.props.entries}\n              editEntry={this.props.editEntry}\n              deleteEntry={this.props.deleteEntry}\n            />\n          )).reverse()}\n        </ul>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default EntryContainer;\n","import React from \"react\";\nimport Popup from \"reactjs-popup\";\n\nclass AddCatForm extends React.Component {\n  nameRef = React.createRef();\n  IdRef = React.createRef();\n  ageRef = React.createRef();\n  sexRef = React.createRef();\n  colorRef = React.createRef();\n  commentRef = React.createRef();\n  dateRef = React.createRef();\n\n  createCat = (event, close) => {\n    event.preventDefault();\n    const entry = {\n      nameRef: this.nameRef.current.value,\n      IdRef: parseInt(this.IdRef.current.value),\n      ageRef: this.ageRef.current.value,\n      sexRef: this.sexRef.current.value,\n      colorRef: this.colorRef.current.value,\n      commentRef: this.commentRef.current.value,\n      dateRef: (new Date()).toString(),\n    };\n    console.log(entry);\n    this.props.addEntry(entry);\n    event.currentTarget.reset();\n    close();\n  }\n\n  render() {\n    return (\n      <Popup trigger={<button> Add New Cat</button>} position=\"bottom center\">\n          {close => (\n            <form className=\"form\" onSubmit={(e)=>this.createCat(e,close)} autoComplete=\"off\">\n              <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" required=\"required\"/>\n              <input name=\"stuId\" ref={this.IdRef} type=\"text\" placeholder=\"Cat ID #\" required=\"required\"/>\n              <input name=\"age\" ref={this.ageRef} type=\"text\" placeholder=\"Age\" required=\"required\"/>\n              <select name=\"sex\" ref={this.sexRef} type=\"text\" placeholder=\"Sex\" required=\"required\">\n                <option value=\"female\">Female</option>\n                <option value=\"male\">Male</option>\n              </select>\n              <input name=\"color\" ref={this.colorRef} type=\"text\" placeholder=\"color\" required=\"required\"/>\n              <textarea name=\"comment\" ref={this.commentRef} placeholder=\"Comment\" required=\"required\"></textarea>\n              <button type=\"submit\">+ Add Cat</button>\n            </form>\n          )}\n      </Popup>\n    )\n  }\n}\n\nexport default AddCatForm;\n","// This is just some sample data so you don't have to think of your own!\nconst sampleCats = {\n  cat1: {\n    nameRef: 'Serena',\n    IdRef: 1,\n    ageRef: 5,\n    sexRef: 'Female',\n    colorRef: 'Orange & White',\n    commentRef: 'May not actually be a cat. Might be a potato.',\n    dateRef:'Date Thu Jan 30 2020 20:08:16 GMT-0500 (Eastern Standard Time)',\n    image: \"./css/images/serena.png\",\n  },\n\n  cat2: {\n    nameRef: 'Sofia',\n    IdRef: 2,\n    ageRef: 2,\n    sexRef: 'Female',\n    colorRef: 'Grey & Black stripes',\n    commentRef: 'Enjoys cheeseburgers and hardcore parkour at 2:00 AM.',\n    dateRef:'Date Thu Jan 31 2020 20:08:16 GMT-0500 (Eastern Standard Time)',\n    image: \"./css/images/sofia.png\",\n  },\n  cat3: {\n    nameRef: 'Chonk',\n    IdRef: 3,\n    ageRef: 7,\n    sexRef: 'Male',\n    colorRef: 'Grey',\n    commentRef: 'Struggles to roll over except when food is near.',\n    dateRef:'Date Thu Jan 33 2020 20:08:16 GMT-0500 (Eastern Standard Time)',\n    image: \"css/images/chonk.png\",\n  },\n};\n\nexport default sampleCats;\n","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyAvGujeRq-GYiv2e8e92UrYtSmD4hsKjCo\",\n  authDomain: \"transfer-courses-ef275.firebaseapp.com\",\n  databaseURL: \"https://transfer-courses-ef275.firebaseio.com\",\n})\n\nconst base = Rebase.createClass(firebaseApp.database());\n\nexport {firebaseApp};\nexport default base;\n","import React from 'react';\nimport styled from 'styled-components';\nimport paw from '../css/images/catpaw.png';\n\nconst ImageDiv = styled.div`\n  width: 400px;\n  height: 400px;\n  z-index: -1;\n  background-image: url(${paw});\n  transform: rotate(40deg);\n  position: absolute;\n  margin-left: 60%;\n  opacity: 0.7;\n`\n\nclass BackgroundImage extends React.Component {\n  render() {\n    return (\n      <ImageDiv />\n    )\n  }\n}\n\nexport default BackgroundImage;\n","import React from 'react';\nimport Title from './Title.js';\nimport EntryContainer from './EntryContainer.js';\nimport AddCatForm from './AddCatForm.js';\nimport sampleCats from '../sampleCats.js';\nimport base from '../base.js';\nimport BackgroundImage from './BackgroundImage.js';\n\nclass App extends React.Component {\n  state = {\n    entries: {},\n  };\n\n  componentDidMount() {\n    this.ref = base.syncState('/app', {\n      context: this,\n      state: 'entries',\n    });\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addEntry = (entry) => {\n    // copy state\n    const entries = { ...this.state.entries };\n    // add new entry to entries object\n    entries[`entry${Date.now()}`] = entry\n    // set new entries object to state\n    this.setState({\n      entries: entries,\n    })\n  };\n\n  editEntry = (key,updatedEntry) => {\n    const entries = {...this.state.entries};\n    entries[key] = updatedEntry;\n    this.setState({entries});\n  }\n\n  deleteEntry = (key) => {\n    const entries = { ...this.state.entries };\n    entries[key] = null;\n    this.setState({entries});\n  }\n\n  loadSampleEntries = () => {\n    this.setState({entries: sampleCats });\n  }\n\n  render(){\n    return (\n      <React.Fragment>\n        <BackgroundImage />\n        <Title title=\"Cat Tracker\" />\n        <AddCatForm addEntry={this.addEntry} formOpen={this.state.formOpen} />\n        <EntryContainer\n          title=\"Current Cats\"\n          loadSampleEntries={this.loadSampleEntries}\n          editEntry={this.editEntry}\n          deleteEntry={this.deleteEntry}\n          entries={this.state.entries}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/reset.css';\nimport './css/style.css';\nimport App from './components/App.js'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('main'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}